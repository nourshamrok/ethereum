{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","Components/Search/Search.js","Components/Transactions/Transactions.js","CustomHooks/useEthereumSearch.js","Components/Panel/Panel.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Search","changeAddress","useState","error","setError","type","onChange","e","isAddress","target","value","Transactions","address","pageNumber","setPageNumber","loading","setLoading","transactions","setTransactions","message","setMessage","hasMore","setHasMore","useEffect","axios","method","url","params","module","action","startblock","endblock","page","offset","sort","apikey","res","console","log","data","result","length","prevTransactions","map","t","timeStamp","to","from","confirmations","hash","useEthereumSearch","observer","useRef","lastTransctionElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","index","ref","Panel","setAddress","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.518be3fe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nimport { useState } from 'react';\r\nimport { isAddress} from 'web3-utils';\r\n\r\n\r\nexport default function Search({changeAddress}) {\r\n    const [error,setError] = useState(null);\r\n\r\n    function change(e) {\r\n       \r\n        if (isAddress(e.target.value)){\r\n            setError(null);\r\n        }else{\r\n            setError(\"not valid address\");\r\n        }\r\n        changeAddress(e.target.value);\r\n      }\r\n\r\n\r\nreturn (\r\n    <>\r\n    <div>enter valid address:</div>\r\n    <input type=\"text\" onChange={change}></input>\r\n    <div>{error }</div>\r\n    </>\r\n    \r\n)\r\n}","\r\nimport { useState, useRef, useCallback ,useEffect} from \"react\";\r\nimport useEthereumSearch from \"../../CustomHooks/useEthereumSearch\";\r\n\r\n\r\n\r\nfunction Transactions({address}) {\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  const { transactions, loading, message, hasMore } = useEthereumSearch(\r\n    address,\r\n    pageNumber\r\n  );\r\n\r\n  const observer = useRef();\r\n  const lastTransctionElementRef = useCallback((node) => {\r\n    if (loading) return;\r\n    if (observer.current) observer.current.disconnect();\r\n    observer.current = new IntersectionObserver((entries) => {\r\n      if (entries[0].isIntersecting && hasMore) {\r\n        setPageNumber((prevPageNumber) => prevPageNumber + 1);\r\n      }\r\n    });\r\n\r\n    if (node) observer.current.observe(node);\r\n  },[loading,hasMore]);\r\n\r\n\r\n  useEffect(() => {\r\n      setPageNumber(1);\r\n  },[address])\r\n\r\n  return (\r\n<>\r\n      {transactions.length > 0 &&\r\n        transactions.map((t, index) => {\r\n          return (\r\n            <div\r\n              key={t.hash}\r\n              ref={\r\n                transactions.length === index + 1\r\n                  ? lastTransctionElementRef\r\n                  : null\r\n              }\r\n            >\r\n              <div>timestamp: {t.timeStamp}</div>\r\n              <div>from: {t.from}</div>\r\n              <div>to: {t.to}</div>\r\n              <div>hash: {t.hash}</div>\r\n              <div>value: {t.value}</div>\r\n              <div>confirmations: {t.confirmations}</div>\r\n              <br></br>\r\n            </div>\r\n          );\r\n        })}\r\n      <div>{loading && \"Loading...\"}</div>\r\n      <div>{message}</div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Transactions;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { isAddress} from 'web3-utils';\r\n\r\n\r\nexport default function useEthereumSearch(address, pageNumber) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [message, setMessage] = useState(null);\r\n  const [hasMore, setHasMore] = useState(false);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (!isAddress(address)){\r\n      setMessage(\"not valid address\");\r\n      return\r\n    }\r\n    setLoading(true);\r\n    setMessage(null);\r\n\r\n    axios({\r\n      method: \"GET\",\r\n      url: \"https://api.etherscan.io/api\",\r\n      params: {\r\n        module: \"account\",\r\n        action: \"txlist\",\r\n        address: address ,\r\n        startblock: 0,\r\n        endblock: \"99999999\",\r\n        page: pageNumber,\r\n        offset: 10,\r\n        sort: \"asc\",\r\n        apikey: \"QBQI7KVWMV13JH1B13F8297AG8NCCFH72Y\",\r\n      },\r\n    }).then((res) => {\r\n      console.log(res.data.result);\r\n      setLoading(false);\r\n      setHasMore(res.data.result.length > 0);\r\n      setTransactions((prevTransactions) => {\r\n        const data =\r\n          typeof res.data.result == \"object\" &&\r\n          res.data.result.map((t) => {\r\n            const { timeStamp, to, from, value, confirmations, hash } = t;\r\n            return { timeStamp, to, from, value, confirmations, hash };\r\n          });\r\n\r\n        return [...prevTransactions, ...data];\r\n      });\r\n    });\r\n  }, [address, pageNumber]);\r\n\r\n  useEffect(() => {\r\n    setTransactions([]);\r\n  },[address]);\r\n\r\n  return { transactions, loading, message, hasMore };\r\n}\r\n","import \"./Panel.scss\";\r\nimport { useState } from \"react\";\r\nimport Search from '../Search/Search';\r\nimport Transactions from '../Transactions/Transactions'\r\n\r\nfunction Panel() {\r\n  const [address, setAddress] = useState(null);\r\n\r\n\r\n  function changeAddress(address) {\r\n    setAddress(address);\r\n  }\r\n\r\n  return (\r\n    <div className=\"top\">\r\n        <Search changeAddress={changeAddress}/>\r\n       {address && <Transactions address={address}/> }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Panel;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Panel from './Components/Panel/Panel';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Panel />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}